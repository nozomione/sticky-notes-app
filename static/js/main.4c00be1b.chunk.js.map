{"version":3,"sources":["components/note/Note.module.scss","components/note/color-setting/color-picker/ColorPicker.module.scss","components/note/date-modified/DateModified.module.scss","components/utils-bar/utils/empty-data/alert/Alert.module.scss","components/note/save-note/SaveNote.module.scss","components/list-notes/ListNotes.module.scss","components/utils-bar/UtilsBar.module.scss","components/shared/button/Button.module.scss","components/utils-bar/utils/add-note/AddNote.module.scss","components/utils-bar/utils/empty-data/EmptyData.module.scss","components/utils-bar/utils/search-note/SearchNote.module.scss","components/utils-bar/utils/sort-notes/SortNotes.module.scss","components/note/delete-note/DeleteNote.module.scss","components/note/toggle-note/ToggleNote.module.scss","models/sticky.tsx","context/stickies.tsx","hooks/useStickies/useStickies.tsx","components/utils-bar/UtilsBar.tsx","components/shared/button/Button.tsx","components/shared/icon/Icon.tsx","utils/icons.tsx","components/utils-bar/utils/add-note/AddNote.tsx","components/utils-bar/utils/empty-data/alert/Alert.tsx","components/utils-bar/utils/empty-data/EmptyData.tsx","components/utils-bar/utils/search-note/SearchNote.tsx","components/utils-bar/utils/sort-notes/SortNotes.tsx","components/note/save-note/SaveNote.tsx","components/note/delete-note/DeleteNote.tsx","components/note/toggle-note/ToggleNote.tsx","components/note/color-setting/ColorSetting.tsx","components/note/color-setting/color-picker/ColorPicker.tsx","components/note/date-modified/DateModified.tsx","components/note/Note.tsx","components/list-notes/ListNotes.tsx","components/Stickes.tsx","hooks/useMatchMedia/useMatchMedia.tsx","App.tsx","index.tsx"],"names":["module","exports","StickyColor","stickiesContext","createContext","setStickiesContext","StickiesProvider","children","useState","stickies","setStickies","useEffect","data","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value","useStickies","useContext","useSetStickies","UtilsBar","className","styles","memo","Button","type","clickHandler","customClass","srOnlyText","disabled","onClick","Icon","size","path","xlinkHref","icons","AddNote","len","Object","keys","length","getRandomColor","Math","floor","random","PINK","BLUE","YELLOW","GREEN","GRAY","PURPLE","id","Date","now","text","color","modified","Alert","handleClick","setAlert","alert","EmptyData","clear","SearchNote","searchText","setSearchText","onChange","e","target","placeholder","htmlFor","SortNotes","sorted","setSorted","prevState","sort","a","b","SaveNote","saved","success","DeleteNote","filter","sticky","ToggleNote","handleChange","ColorSetting","ColorPicker","i","show","setShow","defaultColor","setDefaultColor","palette","setPalette","checkDefault","overlay","toString","collapsed","map","c","toLowerCase","name","_","stickyColor","result","checked","DateModified","divRef","useRef","current","classList","add","remove","ref","date","style","margin","timestamp","weekday","toLocaleString","year","getFullYear","month","day","getDay","time","hour","minute","hour12","formattedDate","Note","expandNote","setExpandNote","showColorPicker","setShowColorPicker","userInput","setUserInput","typing","setTyping","setSaved","editableRef","findIndex","innerHTML","timer","setTimeout","clearTimeout","note","textContent","substr","renderH6","display","justifyContent","onInput","currentTarget","bind","contentEditable","suppressContentEditableWarning","ListNotes","renderList","trim","toLocaleLowerCase","includes","Stickies","match","isMin1080","query","media","window","matchMedia","matches","setMatches","changeHandler","addEventListener","removeEventListener","useMatchMedia","width","padding","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c00be1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Note_note__11l9u\",\"note-pink\":\"Note_note-pink__1BCwx\",\"note-blue\":\"Note_note-blue__1zNlu\",\"note-yellow\":\"Note_note-yellow__2GajN\",\"note-green\":\"Note_note-green__y7q5d\",\"note-gray\":\"Note_note-gray__3TALI\",\"note-purple\":\"Note_note-purple__298UT\",\"note-header\":\"Note_note-header__RyLwV\",\"note-body\":\"Note_note-body__2Skc5\",\"note-body-editable\":\"Note_note-body-editable__2uHJ5\",\"note-footer\":\"Note_note-footer__3rxEr\",\"date\":\"Note_date__3ulTL\",\"collapsed\":\"Note_collapsed__3Pwp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-picker\":\"ColorPicker_color-picker__3aMp7\",\"grow\":\"ColorPicker_grow__1ptmY\",\"pink\":\"ColorPicker_pink__MCY-W\",\"blue\":\"ColorPicker_blue__C0jN1\",\"yellow\":\"ColorPicker_yellow__POhqL\",\"green\":\"ColorPicker_green__2JMeA\",\"gray\":\"ColorPicker_gray__2bwZb\",\"purple\":\"ColorPicker_purple__3JFHr\",\"collapsed\":\"ColorPicker_collapsed__OaoSS\",\"selected\":\"ColorPicker_selected__3nv9z\",\"overlay\":\"ColorPicker_overlay__2W_Hm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date-modified\":\"DateModified_date-modified__1x6dy\",\"date\":\"DateModified_date__CwhEL\",\"fadeIn\":\"DateModified_fadeIn__2_cEv\",\"saved\":\"DateModified_saved__35pqx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__3V-0p\",\"alert-overlay\":\"Alert_alert-overlay__3tNWn\",\"alert-body\":\"Alert_alert-body__1ZQd_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"save-note\":\"SaveNote_save-note__2bQeZ\",\"fadeIn\":\"SaveNote_fadeIn__3z9K6\",\"success\":\"SaveNote_success__3S3s4\",\"spin\":\"SaveNote_spin__2ONwj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-notes\":\"ListNotes_list-notes__3SPSI\",\"info-text\":\"ListNotes_info-text__TJGGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"utility-bar\":\"UtilsBar_utility-bar__3GNBQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__14fP5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-add\":\"AddNote_btn-add__2AN0v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clear-storage\":\"EmptyData_clear-storage__3FBsb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-bar\":\"SearchNote_search-bar__2QkXR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-sort\":\"SortNotes_btn-sort__14LQb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-delete\":\"DeleteNote_btn-delete__17Qhc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-toggle\":\"ToggleNote_btn-toggle__3QOhj\"};","export enum StickyColor{\n    PINK=\"pink\",\n    BLUE=\"blue\",\n    YELLOW=\"yellow\",\n    GREEN=\"green\",\n    GRAY=\"gray\",\n    PURPLE=\"purple\"\n}\n\nexport interface stickyInterface {\n    id: number;\n    text: string;\n    color: StickyColor;\n    modified: number;\n}","import { createContext, useState, useEffect } from 'react';\nimport { stickyInterface } from '../models';\n\nexport const stickiesContext = createContext<stickyInterface[]>([]);\nexport const setStickiesContext= createContext<React.Dispatch<React.SetStateAction<stickyInterface[]>> | null>(null);\n\nconst StickiesProvider: React.FC = ({ children }) => {  \n    const [ stickies, setStickies ] = useState<stickyInterface[]>([]);\n\n    useEffect(() => {\n        const data = JSON.parse(\n            localStorage.getItem('data-stickies-app')!\n        );\n\n        if(data) {\n            setStickies(data);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(\n            'data-stickies-app', \n            JSON.stringify(stickies)\n        );\n    }, [stickies]);\n    \n    return (\n        <stickiesContext.Provider value={ stickies }>\n            <setStickiesContext.Provider value={ setStickies }>\n                { children }\n            </setStickiesContext.Provider>\n        </stickiesContext.Provider>\n    );\n}\n\nexport default StickiesProvider;","import { useContext } from 'react';\nimport { stickiesContext, setStickiesContext } from '../../context';\n\nconst useStickies = () => useContext(stickiesContext);\nconst useSetStickies = () => useContext(setStickiesContext);\n\nexport { useStickies, useSetStickies };\n ","import { memo } from 'react';\nimport styles from './UtilsBar.module.scss';\n\ntype Props = {\n    children: React.ReactNode\n}\n\nconst UtilsBar: React.FC<Props> = ({ children }) => {\n    return (\n        <div className={ styles[\"utility-bar\"] }>\n            { children }\n        </div>\n    )\n}\n\nexport default memo(UtilsBar)\n","import { memo } from 'react';\nimport styles from './Button.module.scss'\n\ninterface Props {\n    type: 'submit' | 'button' | 'reset';\n    clickHandler: (e: React.MouseEvent<HTMLButtonElement>) => void;\n    customClass?: string;\n    srOnlyText?: string;\n    disabled?: boolean;\n    children?: React.ReactNode;\n}\n\nconst Button: React.FC<Props> = ({ \n    type, \n    clickHandler, \n    customClass, \n    srOnlyText, \n    disabled,\n    children }) => {\n    \n    return (\n        <button \n            type={ type }\n            className={ `${styles[\"btn\"]} ${customClass}` }\n            onClick={ clickHandler }\n            disabled={disabled}>\n            <span className=\"sr-only\">\n                { srOnlyText }\n            </span>\n                { children }\n        </button>\n    )\n}\n\nexport default memo(Button);\n","import { memo } from 'react';\n\ninterface Props {\n    size: string;\n    path: string;\n}\n\nconst Icon: React.FC<Props> = ({ size, path }) => {\n    return (\n        <svg className={ size } aria-hidden=\"true\">\n           <use xlinkHref={ path } />\n        </svg>\n    )\n}\n\nexport default memo(Icon);","export const icons: {\n    [ key: string ]: string\n} = {\n    add: './icons/add.svg#add',\n    add_fill: './icons/add_fill.svg#add_fill',\n    add_circle: './icons/add_circle.svg#add_circle',\n    clear_storage: './icons/clear_storage.svg#clear_storage',\n    close: './icons/close.svg#close',\n    check: './icons/check.svg#check',\n    dots: './icons/dots.svg#dots',\n    down: './icons/triangle_down.svg#down',\n    minus: './icons/minus.svg#minus',    \n    setting: './icons/setting.svg#setting',\n    trash: './icons/trash.svg#trash',\n    timer: './icons/timer.svg#timer',\n    up: './icons/triangle_up.svg#up',\n}","import { memo } from 'react';\nimport { StickyColor } from '../../../../models';\nimport { useStickies, useSetStickies } from '../../../../hooks';\nimport { Button, Icon } from '../../../shared';\nimport { icons } from '../../../../utils/icons';\nimport styles from  './AddNote.module.scss';\n\nconst AddNote: React.FC = () => {\n    const stickies = useStickies();\n    const setStickies = useSetStickies()!;\n    const len = Object.keys(StickyColor).length;\n\n    const getRandomColor = () => {\n        const n = Math.floor(Math.random() * len);\n\n        switch(n) {\n            case 0: \n                return StickyColor.PINK;\n            case 1: \n                return StickyColor.BLUE;\n            case 2: \n                return StickyColor.YELLOW;\n            case 3: \n                return StickyColor.GREEN;\n            case 4: \n                return StickyColor.GRAY;\n            case 5: \n                return StickyColor.PURPLE;\n            default:\n                return StickyColor.PINK;\n        }\n    }\n\n    const handleClick = () => {\n        setStickies([\n            ...stickies, \n            {\n                id: Date.now(),\n                text: '',\n                color: getRandomColor(),\n                modified: Date.now()\n            }\n        ])\n    }\n\n    return (\n        <div className={ styles[\"btn-add\"] }>\n            <Button \n                type=\"button\"\n                clickHandler={ handleClick }\n                srOnlyText=\"Add a new note\">\n                <Icon size=\"icon--md\" path={ icons.add } />\n            </Button>\n        </div>\n    )\n}\n\nexport default memo(AddNote); \n","import { memo } from 'react';\nimport { Button } from '../../../../shared';\nimport styles from './Alert.module.scss';\n\ninterface Props {\n    handleClick: ()=> void;\n    setAlert: React.Dispatch<React.SetStateAction<boolean>>;\n}\nconst Alert: React.FC<Props> = ({ handleClick, setAlert }) => {\n\n    const close = () => {\n        setAlert(false);\n    }\n    \n    return (\n        <>\n            <div className={ styles[\"alert-overlay\"] }></div>\n            <div className={ styles.alert }>\n                <div className={ styles[\"alert-body\"] }>\n                    <h2>Are you sure you want to remove all data?</h2>\n                    <div>\n                        <Button \n                        type=\"button\"\n                        clickHandler={ handleClick }>\n                            Yes\n                        </Button>\n                        <Button \n                            type=\"button\"\n                            clickHandler={ close }>\n                            Cancel\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default memo(Alert);\n","import { useState, memo } from 'react';\nimport { useStickies, useSetStickies } from '../../../../hooks';\nimport { Button, Icon } from '../../../shared';\nimport { Alert } from './alert';\nimport { icons } from '../../../../utils/icons';\nimport styles from './EmptyData.module.scss';\n\nexport const EmptyData: React.FC = () => {\n    const stickies = useStickies();\n    const setStickies = useSetStickies()!;\n    const [alert, setAlert] = useState(false);\n\n    const handleClick = () => {\n        setAlert(true);\n    };\n\n    const emptyDate = () => {\n        localStorage.clear();\n        setStickies([]);\n        setAlert(false);\n    }\n\n    return (\n        <>\n        <div className={ styles[\"clear-storage\"] }>\n        <Button \n            type=\"button\"\n            clickHandler={ handleClick }\n            disabled={ stickies.length === 0 }>\n            <Icon size=\"icon--s\" path={ icons.clear_storage } />\n            Empty Data ({ stickies.length })\n        </Button>\n        </div>\n        { alert && <Alert handleClick={ emptyDate } setAlert={ setAlert }/>}\n        </>\n    )\n}\n\nexport default memo(EmptyData);","import { memo } from 'react';\nimport { useStickies } from '../../../../hooks';\nimport styles from './SearchNote.module.scss';\n\ninterface Props {\n\tsearchText: string;\n\tsetSearchText: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst SearchNote: React.FC<Props> = ({ searchText, setSearchText }) => {\n\tconst stickies = useStickies();\n\n\treturn (\n\t\t<div className={styles['search-bar']}>\n\t\t\t<input \n\t\t\t\ttype='search' \n\t\t\t\tid='search' \n\t\t\t\tvalue={ searchText }\n\t\t\t\tonChange={ e => setSearchText(e.target.value) }\n\t\t\t\tplaceholder='Search note...' \n\t\t\t\tdisabled={ stickies.length === 0 }/>\n\t\t\t<label htmlFor='search'>\n\t\t\t\t<span className='sr-only'>Search your note</span>\n\t\t\t</label>\n\t\t\t<span></span>\n\t\t</div>\n\t);\n};\n\nexport default memo(SearchNote);\n","import { useState, memo } from 'react';\nimport { useStickies, useSetStickies } from '../../../../hooks';\nimport { Button } from '../../../shared';\nimport styles from './SortNotes.module.scss';\n\nconst SortNotes: React.FC = () => {\n    const stickies = useStickies();\n    const setStickies = useSetStickies()!;\n    const [sorted, setSorted] = useState(false);\n    \n    const handleClick = () => {\n        setSorted(!sorted);        \n        setStickies( prevState => {\n           return  sorted ? \n                    [...prevState].sort((a, b) =>  a.id - b.id) : \n                    [...prevState].sort((a, b) =>  b.id - a.id)\n        });\n    }\n\n    const renderIcon = () => sorted ? <>&#9660;</> : <>&#9650;</>;\n     \n    return (\n        <div className={ styles[\"btn-sort\"] }>\n            <Button \n                type=\"button\"\n                clickHandler={ handleClick }\n                srOnlyText={ sorted ? \"Sort by oldest\" : \"Sort by newest\" }\n                disabled={ stickies.length === 0 }>\n                By Created: { renderIcon() }\n            </Button>\n        </div>\n    )\n}\n\nexport default memo(SortNotes);\n","import { memo } from 'react';\nimport { Button } from '../../shared';\nimport styles from './SaveNote.module.scss';\n\ninterface Props {\n    saved: boolean;\n    handleClick: () => void;\n}\n\nconst SaveNote: React.FC<Props> = ({ saved, handleClick }) => {\n    return (\n        <div className={ saved ? \n            `${styles[\"save-note\"]} ${styles.success}` : \n            styles[\"save-note\"] }>\n            <Button \n                type=\"button\"\n                clickHandler={ handleClick }\n                srOnlyText=\"Save change\">\n                Save\n            </Button>\n        </div>\n    )\n}\n\nexport default memo(SaveNote); \n","import { memo } from 'react';\nimport { useStickies, useSetStickies } from '../../../hooks';\nimport { Button, Icon } from '../../shared';\nimport { icons } from '../../../utils/icons';\nimport styles from './DeleteNote.module.scss';\n\ninterface Props {\n    id: number;\n}\n\nconst DeleteNote: React.FC<Props> = ({ id }) => {\n    const stickies = useStickies();\n    const setStickies = useSetStickies()!;\n    const handleClick = () => {\n        setStickies(stickies.filter(sticky => sticky.id !== id))\n    }\n    \n    return (\n        <Button\n            type=\"button\"\n            customClass={ styles[\"btn-delete\"] }\n            clickHandler={ handleClick }\n            srOnlyText=\"Delete this note\">\n                <Icon size=\"icon--xs\" path={ icons.trash } />\n        </Button>\n    )\n}\n\nexport default memo(DeleteNote);\n","import { memo } from 'react';\nimport { Icon } from '../../shared';\nimport { icons } from '../../../utils/icons';\nimport styles from './ToggleNote.module.scss';\n\ninterface Props {\n    handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst ToggleNote: React.FC<Props> = ({ handleChange }) => {\n    return (\n        <div className={ styles[\"btn-toggle\"] }>\n            <Icon size=\"icon--xs\" path={ icons.minus } />\n            <input type=\"checkbox\" onChange={ handleChange } />\n        </div>\n    )\n}\n\nexport default memo(ToggleNote);\n","import { memo } from 'react';\nimport { Button, Icon } from '../../shared';\nimport { icons } from '../../../utils/icons';\n\ninterface Props {\n    handleClick: () => void;\n}\n\nconst ColorSetting: React.FC<Props> = ({ handleClick }) => {\n    return (\n        <Button \n            type=\"button\"\n            clickHandler={ handleClick }\n            srOnlyText=\"Open settings\">\n            <Icon size=\"icon--xxs\" path={ icons.dots } />\n        </Button>\n    )\n}\n\nexport default memo(ColorSetting); \n","import { useState, useEffect, memo } from 'react';\nimport { StickyColor } from '../../../../models';\nimport { useStickies, useSetStickies } from '../../../../hooks';\nimport { Button, Icon } from '../../../shared';\nimport { icons } from '../../../../utils/icons';\nimport styles from './ColorPicker.module.scss';\n\ninterface Props {\n    id: number;\n    i: number;\n    show: boolean;\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst ColorPicker: React.FC<Props> = ({ id, i, show , setShow }) => {\n    const stickies = useStickies();\n    const setStickies = useSetStickies()!;\n    const [defaultColor, setDefaultColor] = useState('');\n    const [palette, setPalette] = useState<string[]>([]);\n\n    useEffect(() => {\n        setDefaultColor(stickies[i].color);\n        setPalette(Object.keys(StickyColor));\n    }, [i, stickies])\n  \n    const handleChange = (_: React.ChangeEvent<HTMLInputElement>, color: string) => { \n        let stickyColor: StickyColor;\n        switch(color) { \n            case \"pink\": \n                stickyColor = StickyColor.PINK;\n                setDefaultColor(StickyColor.PINK);\n                break;\n            case \"blue\": \n                stickyColor = StickyColor.BLUE;\n                setDefaultColor(StickyColor.BLUE);\n                break;\n            case \"yellow\": \n                stickyColor = StickyColor.YELLOW;\n                setDefaultColor(StickyColor.YELLOW);\n                break;\n            case \"green\": \n                stickyColor = StickyColor.GREEN;\n                setDefaultColor(StickyColor.GREEN);\n                break;\n            case \"gray\": \n                stickyColor = StickyColor.GRAY;\n                setDefaultColor(StickyColor.GRAY);\n                break;\n            case \"purple\": \n                stickyColor = StickyColor.PURPLE;\n                setDefaultColor(StickyColor.PURPLE);\n                break;\n            default: \n                return;\n        }\n\n        setStickies( prevState => {\n            let result = [...prevState];\n            result[i].color = stickyColor;\n            return result;\n        });\n       \n    }\n\n    const handleClick = () => {\n        setShow(false); \n    }\n\n    const checkDefault= (color: string) => {\n        return color === defaultColor;\n    }   \n\n    const renderPalette = () => {\n        return palette.map( color => {    \n            const c = color.toLowerCase();    \n            return (\n                <div \n                    key={ c } \n                    className={ styles[c] }>\n                    <label htmlFor={ c }>\n                        <span className=\"sr-only\">{ c }</span>\n                    </label>\n                    <input \n                        type=\"radio\" \n                        id={ `${c}-${id}` }\n                        name={ `colors-${id}` }\n                        value={ c }\n                        onChange={ e => handleChange(e, e.target.value) }\n                        checked={ checkDefault(c) }/>\n                    <span>\n                        <Icon size=\"icon--xl\" path={ icons.check } />\n                    </span>\n                </div>)\n        })\n    };\n    \n    return (\n        <>\n         <div className={ styles.overlay }>\n            <Button type=\"button\" clickHandler={ handleClick }>\n                Select Color\n            </Button>\n         </div>\n        { stickies[i].id === id && \n        <div id={id.toString()}\n            className={ show ? styles[\"color-picker\"]: \n                `${styles[\"color-picker\"]} ${styles.collapsed}` }>    \n            { renderPalette() }\n        </div> }\n        </>\n    )\n}\n\nexport default memo(ColorPicker);\n","import { useRef, useEffect, memo } from 'react';\nimport { Icon } from '../../shared';\nimport { icons } from '../../../utils/icons';\nimport styles from './DateModified.module.scss';\n\ninterface Props {\n    modified: number;\n    saved: boolean;\n}\n\nconst DateModified: React.FC<Props> = ({ modified, saved }) => {\n    const divRef = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n        if(saved) {\n            divRef.current!.classList.add(`${styles.saved}`);\n        } else {\n            divRef.current!.classList.remove(`${styles.saved}`);\n        }\n    }, [saved]);\n\n    const formattedDate = (timestamp: number) => {\n        const date = new Date(timestamp);\n        const weekday = date.toLocaleString('en-us', { weekday: 'long' })\n        const year = date.getFullYear();\n        const month = date.toLocaleString('en-us', { month: 'short' }); \n        const day = date.getDay();\n        const time = date.toLocaleString( 'en-us', \n            { hour: 'numeric', minute: 'numeric', hour12: true });\n            \n        return `${weekday}, ${month} ${day} ${year} ${time}`;\n    }\n\n    return (\n         <div \n            className={ styles[\"date-modified\"] }\n            ref={ divRef }>\n            <div className={ styles.date }>\n                <Icon size=\"icon--xxs\" path={ icons.timer } />\n                <span style={{ margin:\"2px 0 0 2px\" }}>\n                    { formattedDate(modified) }\n                </span>\n            </div>   \n        </div>\n    )\n}\n\nexport default memo(DateModified); \n","import { useState, useEffect, useRef, memo } from 'react';\nimport { useStickies, useSetStickies } from '../../hooks';\nimport { SaveNote } from './save-note';\nimport { DeleteNote } from './delete-note';\nimport { ToggleNote } from './toggle-note';\nimport { ColorSetting, ColorPicker } from './color-setting';\nimport { DateModified } from './date-modified';\nimport styles from './Note.module.scss';\n\ninterface Props {\n    id: number;\n    text: string;\n    color: string;\n}\n\nconst Note: React.FC<Props> = ({ id, text, color }) => {\n    const stickies = useStickies();\n    const setStickies = useSetStickies()!;\n    const [ expandNote, setExpandNote ] = useState(false);\n    const [ showColorPicker, setShowColorPicker ] = useState(false); \n    const [ userInput, setUserInput ] = useState('');\n    const [ typing, setTyping ] = useState(false);\n    const [ saved, setSaved ] = useState(false);\n    const editableRef = useRef<HTMLDivElement>(null);\n    const i = stickies.findIndex(sticky => sticky.id === id);\n\n\n    useEffect(() => {\n        editableRef.current!.innerHTML = text;\n    }, [text]);\n\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setSaved(false);\n            setTyping(false);\n        }, 3500); \n        \n        return () => {\n            clearTimeout(timer);\n        }\n    }, [stickies]);\n\n    const toggleClass = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setExpandNote(e.target.checked);\n    }\n\n    const toggleColorPicker = () => {\n        setShowColorPicker(!showColorPicker);\n    }\n\n    const inputHandle = (e: React.FormEvent<HTMLDivElement>) => {    \n        if(e.currentTarget.textContent !== stickies[i].text) {  \n            setTyping(true);  \n            setUserInput(e.currentTarget.innerHTML!); \n        } else {\n            setTyping(false);\n        }\n    }\n\n    const saveChange = () => {\n        setStickies( prevState => {\n                let result = [...prevState];\n                result[i].text = userInput; \n                result[i].modified = Date.now();\n                editableRef.current!.innerHTML = userInput;\n\n                return result;\n            });\n        \n        setSaved(true);\n    }\n\n    const renderH6 = () => `${editableRef.current?.textContent?.substr(0, 20)}...`;\n\n    return (\n        <div \n            className={ expandNote ?\n                `${styles.note} ${styles[\"note-\"+color]} ${styles.collapsed}` : \n                `${styles.note} ${styles[\"note-\"+color]}` }>\n            \n            { showColorPicker && \n                <ColorPicker id={ id } \n                    i={ i }\n                    show={ showColorPicker }\n                    setShow={ setShowColorPicker }/> }\n\n            <div className={ styles[\"note-header\"]} >\n                <ToggleNote handleChange={ toggleClass } />\n                { !!expandNote && <h6>{ renderH6() }</h6>}\n                <div style={ { display: \"flex\", justifyContent: \"center\" } }>\n                    <ColorSetting handleClick={ toggleColorPicker } />\n                    <DeleteNote id={ id } />\n                </div>\n            </div>\n            <div className={ styles[\"note-body\"] }> \n                <div \n                    className={ styles[\"note-body-editable\"] } \n                    onInput={ inputHandle.bind(this) }\n                    contentEditable={ true }\n                    suppressContentEditableWarning={ true }\n                    ref={ editableRef }>\n                </div>\n            </div>\n            <div className={ styles[\"note-footer\"] }> \n                 <DateModified \n                    modified={ stickies[i].modified } \n                    saved={ saved }/>\n                { typing && <SaveNote saved={ saved } handleClick={ saveChange }/> }\n            </div>\n        </div>\n    )\n}\nexport default memo(Note);\n","import { memo } from 'react';\nimport { useStickies } from '../../hooks';\nimport { Note }  from '../note';\nimport styles from './ListNotes.module.scss';\n\ninterface Props {\n    searchText: string;\n}\n\nconst ListNotes: React.FC<Props> = ({ searchText }) => {\n    const stickies = useStickies();\n\n    const renderList = () => {\n        if(searchText.trim().length !== 0 ) {\n            let searchedResult = [...stickies]; \n            searchedResult = stickies\n                .filter( sticky => sticky.text\n                    .toLocaleLowerCase()\n                    .includes(searchText\n                    .toLowerCase()));\n            \n            return searchedResult.map( sticky => \n                    <Note \n                        key={ sticky.id }\n                        id={ sticky.id }\n                        text={ sticky.text }\n                        color={ sticky.color }\n                    />);\n        } \n\n        return stickies.map( sticky => \n                <Note \n                    key={ sticky.id }\n                    id={ sticky.id }\n                    text={ sticky.text }\n                    color={ sticky.color }\n                 />);\n    }\n        \n    return (\n        <div className={ styles[\"list-notes\"] }>\n            { stickies.length !== 0 ? renderList() : \n                <p className={ styles[\"info-text\"] }>No note to display. Please add a new note.</p>}\n            { searchText && renderList().length === 0 && \n                <p className={ styles[\"info-text\"] }>\n                 No match found for \"<strong>{ searchText }</strong>\"<br/><br/>\n                 Please try different keywords.\n                </p>}\n        </div>\n    )\n}\n\nexport default memo(ListNotes);\n","import { useState, memo } from 'react';\nimport { StickiesProvider } from '../context';\nimport { useMatchMedia } from '../hooks';\nimport { \n    UtilsBar, \n    AddNote,\n    SearchNote, \n    SortNotes, \n    EmptyData\n} from './utils-bar';\nimport { ListNotes } from './list-notes';\n\nconst Stickies: React.FC = () => {\n    const [searchText, setSearchText] = useState('');\n    const isMin1080 = useMatchMedia('(min-width: 1080px)');\n\n    const stickiesContainer = {   \n        rules: (match: boolean) => ({\n            width: match ? \"80%\" : \"100%\",\n            margin: \"0 auto\",\n            padding: \"15px 15px 30px\"\n        })\n    }\n\n    return (\n        <div style={ stickiesContainer.rules(isMin1080) }>\n            <StickiesProvider>\n                <UtilsBar>\n                    <div>\n                        <AddNote />\n                        <EmptyData />\n                    </div>\n                    <div>\n                        <SearchNote \n                            searchText={ searchText } \n                            setSearchText={ setSearchText }/>\n                        <SortNotes />\n                    </div>       \n                </UtilsBar>\n                <ListNotes searchText={ searchText }/>\n            </StickiesProvider>\n        </div>\n    )\n}\n\nexport default memo(Stickies);\n","import { useState, useEffect } from 'react';\nconst useMatchMedia = (query: string) => {\n    const media = window.matchMedia(query);\n    const [matches, setMatches] = useState(media.matches);\n    const changeHandler = (e: MediaQueryListEvent) => {\n        setMatches(e.matches)\n    };\n    \n    useEffect(() => {\n        media.addEventListener('change', changeHandler);\n\n        return () =>  media.removeEventListener('change', changeHandler);\n    }, [media]);\n\n    return matches;\n}\n\nexport { useMatchMedia };\n","import Stickies from './components/Stickes';\nimport './App.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Stickies />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}